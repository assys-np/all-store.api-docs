{
   "swagger": "2.0",
   "info": {
      "description": "",
      "version": "1.0.0",
      "title": "Allstore ecom",
      "termsOfService": "httsp://allstoreapi.ebloodbanknepal.com/",
      "contact": { "email": "allstore@gmail.com" },
      "license": { "name": "Apache 2.0", "url": "http://www.apache.org/licenses/LICENSE-2.0.html" }
   },
   "host": "https://allstoreapi.ebloodbanknepal.com",
   "tags": [
      {
         "name": "user",
         "description": "Operations about your user"
      },
      {
         "name": "product",
         "description": "Operations about products"
      },
      {
         "name": "category",
         "description": "Operations about category"
      },
      {
         "name": "order",
         "description": "Operations about orders"
      }
   ],
   "schemes": ["http"],
   "paths": {
      "/store/inventory": {
         "get": {
            "tags": ["product"],
            "summary": "Returns pet inventories by status",
            "description": "Returns a map of status codes to quantities",
            "operationId": "getInventory",
            "produces": ["application/json"],
            "parameters": [],
            "responses": {
               "200": {
                  "description": "successful operation",
                  "schema": { "type": "object", "additionalProperties": { "type": "integer", "format": "int32" } }
               }
            },
            "security": [{ "api_key": [] }]
         }
      },
      "/store/order": {
         "post": {
            "tags": ["product"],
            "summary": "Place an order for a pet",
            "description": "",
            "operationId": "placeOrder",
            "produces": ["application/xml", "application/json"],
            "parameters": [
               {
                  "in": "body",
                  "name": "body",
                  "description": "order placed for purchasing the pet",
                  "required": true,
                  "schema": { "$ref": "#/definitions/Order" }
               }
            ],
            "responses": {
               "200": { "description": "successful operation", "schema": { "$ref": "#/definitions/Order" } },
               "400": { "description": "Invalid Order" }
            }
         }
      },
      "/store/order/{orderId}": {
         "get": {
            "tags": ["product"],
            "summary": "Find purchase order by ID",
            "description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
            "operationId": "getOrderById",
            "produces": ["application/xml", "application/json"],
            "parameters": [
               {
                  "name": "orderId",
                  "in": "path",
                  "description": "ID of pet that needs to be fetched",
                  "required": true,
                  "type": "integer",
                  "maximum": 10.0,
                  "minimum": 1.0,
                  "format": "int64"
               }
            ],
            "responses": {
               "200": { "description": "successful operation", "schema": { "$ref": "#/definitions/Order" } },
               "400": { "description": "Invalid ID supplied" },
               "404": { "description": "Order not found" }
            }
         },
         "delete": {
            "tags": ["product"],
            "summary": "Delete purchase order by ID",
            "description": "For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors",
            "operationId": "deleteOrder",
            "produces": ["application/xml", "application/json"],
            "parameters": [
               {
                  "name": "orderId",
                  "in": "path",
                  "description": "ID of the order that needs to be deleted",
                  "required": true,
                  "type": "integer",
                  "minimum": 1.0,
                  "format": "int64"
               }
            ],
            "responses": {
               "400": { "description": "Invalid ID supplied" },
               "404": { "description": "Order not found" }
            }
         }
      },

      "/user/createWithArray": {
         "post": {
            "tags": ["user"],
            "summary": "Creates list of users with given input array",
            "description": "",
            "operationId": "createUsersWithArrayInput",
            "produces": ["application/xml", "application/json"],
            "parameters": [
               {
                  "in": "body",
                  "name": "body",
                  "description": "List of user object",
                  "required": true,
                  "schema": { "type": "array", "items": { "$ref": "#/definitions/User" } }
               }
            ],
            "responses": { "default": { "description": "successful operation" } }
         }
      },
      "/user/createWithList": {
         "post": {
            "tags": ["user"],
            "summary": "Creates list of users with given input array",
            "description": "",
            "operationId": "createUsersWithListInput",
            "produces": ["application/xml", "application/json"],
            "parameters": [
               {
                  "in": "body",
                  "name": "body",
                  "description": "List of user object",
                  "required": true,
                  "schema": { "type": "array", "items": { "$ref": "#/definitions/User" } }
               }
            ],
            "responses": { "default": { "description": "successful operation" } }
         }
      },
      "/user/login": {
         "get": {
            "tags": ["user"],
            "summary": "Logs user into the system",
            "description": "",
            "operationId": "loginUser",
            "produces": ["application/xml", "application/json"],
            "parameters": [
               {
                  "name": "username",
                  "in": "query",
                  "description": "The user name for login",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "password",
                  "in": "query",
                  "description": "The password for login in clear text",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "successful operation",
                  "schema": { "type": "string" },
                  "headers": {
                     "X-Rate-Limit": {
                        "type": "integer",
                        "format": "int32",
                        "description": "calls per hour allowed by the user"
                     },
                     "X-Expires-After": {
                        "type": "string",
                        "format": "date-time",
                        "description": "date in UTC when token expires"
                     }
                  }
               },
               "400": { "description": "Invalid username/password supplied" }
            }
         }
      },
      "/user/logout": {
         "get": {
            "tags": ["user"],
            "summary": "Logs out current logged in user session",
            "description": "",
            "operationId": "logoutUser",
            "produces": ["application/xml", "application/json"],
            "parameters": [],
            "responses": { "default": { "description": "successful operation" } }
         }
      },
      "/user/{username}": {
         "get": {
            "tags": ["user"],
            "summary": "Get user by user name",
            "description": "",
            "operationId": "getUserByName",
            "produces": ["application/xml", "application/json"],
            "parameters": [
               {
                  "name": "username",
                  "in": "path",
                  "description": "The name that needs to be fetched. Use user1 for testing. ",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": { "description": "successful operation", "schema": { "$ref": "#/definitions/User" } },
               "400": { "description": "Invalid username supplied" },
               "404": { "description": "User not found" }
            }
         },
         "put": {
            "tags": ["user"],
            "summary": "Updated user",
            "description": "This can only be done by the logged in user.",
            "operationId": "updateUser",
            "produces": ["application/xml", "application/json"],
            "parameters": [
               {
                  "name": "username",
                  "in": "path",
                  "description": "name that need to be updated",
                  "required": true,
                  "type": "string"
               },
               {
                  "in": "body",
                  "name": "body",
                  "description": "Updated user object",
                  "required": true,
                  "schema": { "$ref": "#/definitions/User" }
               }
            ],
            "responses": {
               "400": { "description": "Invalid user supplied" },
               "404": { "description": "User not found" }
            }
         },
         "delete": {
            "tags": ["user"],
            "summary": "Delete user",
            "description": "This can only be done by the logged in user.",
            "operationId": "deleteUser",
            "produces": ["application/xml", "application/json"],
            "parameters": [
               {
                  "name": "username",
                  "in": "path",
                  "description": "The name that needs to be deleted",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "400": { "description": "Invalid username supplied" },
               "404": { "description": "User not found" }
            }
         }
      }
   },
   "securityDefinitions": {
      "petstore_auth": {
         "type": "oauth2",
         "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
         "flow": "implicit",
         "scopes": { "write:pets": "modify pets in your account", "read:pets": "read your pets" }
      },
      "api_key": { "type": "apiKey", "name": "api_key", "in": "header" }
   },
   "definitions": {
      "Order": {
         "type": "object",
         "properties": {
            "id": { "type": "integer", "format": "int64" },
            "products": {
               "type": "object",
               "properties": {
                  "productId": { "$ref": "#/definitions/Product" },
                  "quantityCount": { "type": "integer", "format": "int32" },
                  "title": { "type": "string" },
                  "thumbnailImage": {
                     "type": "object",
                     "properties": { "name": { "type": "string" }, "path": { "type": "string" } }
                  },
                  "actualPrice": { "type": "integer" },
                  "discountedPrice": { "type": "integer" },
                  "shippingFee": { "type": "integer" }
               }
            },
            "orderStatus": {
               "type": "object",
               "properties": {
                  "status": {
                     "type": "string",
                     "enum": ["pending", "processing", "dispatched", "shipped", "delivered", "cancelled"]
                  },
                  "description": { "type": "string" },
                  "udpatedAt": {
                     "type": "string",
                     "format": "date-time"
                  }
               }
            },
            "shippingAddress": { "type": "string" },
            "billingAddress": { "type": "string" },
            "isShippingBilling": { "type": "boolean", "default": false },
            "orderedAt": { "type": "string", "format": "date-time" },
            "shipDate": { "type": "string", "format": "date-time" },
            "isComplete": { "type": "boolean", "default": false }
         },
         "xml": { "name": "Order" }
      },
      "Category": {
         "type": "object",
         "properties": {
            "id": { "type": "integer", "format": "int64" },
            "name": { "type": "string" },
            "parent": { "type": "string", "example": "/electronics" },
            "slug": { "type": "string" },
            "attributes": { "type": "string", "example": "color,price" },
            "image": {
               "type": "object",
               "properties": {
                  "name": { "type": "string" },
                  "path": { "type": "string" }
               }
            },
            "isDisabled": { "type": "boolean" },
            "productsCount": { "type": "integer" },
            "vendorsCount": { "type": "integer" },
            "createdAt": { "type": "string", "format": "date-time" }
         },
         "xml": { "name": "Category" }
      },
      "User": {
         "type": "object",
         "properties": {
            "id": { "type": "integer", "format": "int64" },
            "cart": { "type": "array", "items": { "$ref": "#/definitions/Product" } },
            "wishlist": { "type": "array", "items": { "$ref": "#/definitions/Product" } },
            "fullName": { "type": "string" },
            "password": { "type": "string" },
            "email": {
               "type": "object",
               "properties": {
                  "emailAddress": { "type": "string" },
                  "isEmailVerified": { "type": "boolean", "default": false },
                  "emailVerificationToken": {
                     "type": "object",
                     "properties": {
                        "token": { "type": "string" },
                        "tokenGeneratedAt": { "type": "string", "format": "date-time" }
                     }
                  }
               }
            },
            "phone": {
               "type": "object",
               "properties": {
                  "phoneNo": { "type": "string" },
                  "isPhoneVerified": { "type": "boolean", "default": false },
                  "phoneVerificationToken": {
                     "type": "object",
                     "properties": {
                        "token": { "type": "string" },
                        "tokenGeneratedAt": { "type": "string", "format": "date-time" }
                     }
                  }
               }
            },
            "isDisabled": { "type": "boolean", "default": false },
            "createdAt": { "type": "date", "format": "date-time" }
         },
         "xml": { "name": "User" }
      },
      "Tag": {
         "type": "object",
         "properties": { "id": { "type": "integer", "format": "int64" }, "name": { "type": "string" } },
         "xml": { "name": "Tag" }
      },
      "DeliveryGuy": {
         "type": "object",
         "properties": {
            "id": { "type": "integer", "format": "int64" },
            "assignedOrders": { "type": "array", "items": { "$ref": "#/definitions/Order" } },
            "fullName": { "type": "string" },
            "phone": { "type": "string" },
            "password": { "type": "string" },
            "photo": {
               "type": "object",
               "properties": {
                  "name": { "type": "string" },
                  "path": { "type": "string" }
               }
            },
            "createdAt": { "type": "string", "format": "date-time" }
         },
         "xml": { "name": "DeliveryGuy" }
      },
      "Product": {
         "type": "object",
         "required": ["name", "images"],
         "properties": {
            "id": { "type": "integer", "format": "int64" },
            "categoryId": { "$ref": "#/definitions/Category" },
            "name": { "type": "string", "example": "iphone 12" },
            "slug": { "type": "string", "example": "iphone-12" },
            "description": { "type": "string", "example": "product description" },
            "shippingFee": { "type": "integer", "example": "80" },
            "images": {
               "type": "array",
               "xml": { "name": "photoUrl", "wrapped": true },
               "items": {
                  "type": "object",
                  "properties": { "name": { "type": "string" }, "path": { "type": "string" } }
               }
            },
            "variants": {
               "type": "object",
               "properties": {
                  "images": {
                     "type": "array",
                     "items": {
                        "type": "object",
                        "properties": { "name": { "type": "string" }, "path": { "type": "string" } }
                     }
                  },
                  "actualPrice": { "type": "string", "example": "100" },
                  "sellingPrice": { "type": "string", "example": "150" },
                  "sku": { "type": "string", "example": "ph-002" },
                  "color": { "type": "string", "example": "red" },
                  "customVariants": { "type": "string", "example": "string of json object" }
               }
            },
            "returns": {
               "type": "object",
               "properties": {
                  "isReturnable": { "type": "boolean", "example": false },
                  "scheme": { "type": "String", "example": "return scheme" },
                  "description": { "type": "string", "example": "return scheme description" }
               }
            },
            "warranty": {
               "type": "object",
               "properties": {
                  "hasWarranty": { "type": "boolean", "example": true },
                  "scheme": { "type": "String", "example": "warranty scheme" },
                  "description": { "type": "string", "example": "warranty scheme description" }
               }
            },
            "delivery": {
               "type": "object",
               "properties": {
                  "scheme": { "type": "String", "example": "warranty scheme" },
                  "price": { "type": "String", "example": "80" },
                  "description": { "type": "string", "example": "warranty scheme description" }
               }
            },
            "questionsCount": { "type": "integer" },
            "reviewsCount": { "type": "number" },
            "hasNewQuestions": { "type": "boolean" },
            "hasNewReviews": { "type": "boolean" },
            "isDisabled": { "type": "boolean" },
            "createdAt": { "type": "string", "format": "date-time" }
         },
         "xml": { "name": "Product" }
      },
      "ApiResponse": {
         "type": "object",
         "properties": {
            "code": { "type": "integer", "format": "int32" },
            "type": { "type": "string" },
            "message": { "type": "string" }
         }
      }
   },
   "externalDocs": { "description": "Find out more about Swagger", "url": "http://swagger.io" }
}
